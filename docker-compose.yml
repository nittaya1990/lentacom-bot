version: "3"

services:
  bot:
    build: ./src
    environment:
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - PG_HOST=${PG_HOST}
      - TG_TOKEN=${TG_TOKEN}
      - TG_ADMIN_ID=${TG_ADMIN_ID}
      - TG_USE_REDIS=${TG_USE_REDIS}
      - REDIS_HOST=${REDIS_HOST}
      - INFLUX_HOST=${INFLUXDB_HOST}
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    depends_on:
      - db
      - redis
  redis:
    image: redis:6.2-alpine
    command: sh -c "redis-server --appendonly yes"
    volumes:
      - redis_data/:/data
  db:
    image: postgres:13.1
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    volumes:
      - pg_data/:/var/lib/postgresql/data
  influxdb:
    image: influxdb:1.8-alpine
    container_name: "test-stats-influxdb"
    restart: always
    volumes:
      - "influxdb:/var/lib/influxdb"
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN}  # Этот юзер нужен для создания базы
      - INFLUXDB_ADMIN_USER_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_USER=${INFLUXDB_USER}  # Этот юзер для записи в БД и чтения со стороны Grafana
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
      - INFLUXDB_HTTP_AUTH_ENABLED=${INFLUXDB_HTTP_AUTH_ENABLED}


volumes:
  pg_data:
  redis_data:
  influxdb: